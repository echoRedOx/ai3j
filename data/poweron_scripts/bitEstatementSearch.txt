[ ER.BIT.ESTATEMENT

  Created by
  Ethan Roberts
  on 03/04/2016

  This specfile will read letterfile BIT.ESTATEMENT.INFO and FM accounts accordingly, or write out to letterfiles BIT.ESTATEMENT.MATCH or BIT.ESTATEMENT.MISMATCH based 
  on criteria.

]


TARGET=ACCOUNT 

DEFINE 
 FILENUMBER=NUMBER
 FILELINE=CHARACTER
 FILEERROR=CHARACTER
 FPOS = NUMBER


 MISMATCHFILENUM=NUMBER
 MISMATCHFERROR=CHARACTER
 MISMATCHCOUNT=NUMBER
 MATCHFILENUM=NUMBER
 MATCHFILEFERROR=CHARACTER

 ACCOUNTNUM=CHARACTER
 TAB=CHARACTER
 CR=CHARACTER(1)
 LF=CHARACTER(1)
 SPACE = CHARACTER(1)
 EMAILADDRESS=CHARACTER
 COUNT=NUMBER
 MATCHCOUNT=NUMBER
 STATUS=CHARACTER
 REGISTEREDMODDATE=CHARACTER
 LFNAME = CHARACTER 
 TEMPLINE = CHARACTER
 NEXTLINE=CHARACTER
 NME = CHARACTER
 SSN = CHARACTER
 BIRTHDATE = CHARACTER
 LOOPCOUNTER = NUMBER

 FOUNDERRORSTRING = NUMBER
 TRUE = NUMBER
 FALSE = NUMBER
 
END

SETUP
 TRUE = 1
 FALSE = 0
 LOOPCOUNTER = 0
 COUNT=0
 MISMATCHCOUNT=0
 MATCHCOUNT=0
 TAB=CTRLCHR(9)
 CR=CTRLCHR(13)
 LF=CTRLCHR(10)
 SPACE = CTRLCHR(32)
 NEXTLINE=CR+LF

  FILEOPEN("LETTER","BIT.ESTATEMENT.INFO","READ",FILENUMBER,FILEERROR) 
  FILEOPEN("LETTER","BIT.ESTATEMENT.MISMATCH","APPEND",MISMATCHFILENUM,MISMATCHFERROR)
  FILEOPEN("LETTER","BIT.ESTATEMENT.MATCH","APPEND",MATCHFILENUM,MATCHFILEFERROR) 

  IF FILEERROR<>"" THEN
   DO 
    PRINT "Error Opening File: "+FILEERROR
    TERMINATE 
   END 
END

SELECT 
 NONE
END

PRINT TITLE="BIT Estatement"  REPORTCATEGORY="FMREPORTS"
 NONANSISTANDARD
 HEADER="" 

 
  WHILE FILEERROR=""
   DO 
    FOUNDERRORSTRING = FALSE
    LOOPCOUNTER = LOOPCOUNTER + 1
    CALL SCANSTRING                                          [ Reading ESTATEMENT.BIT.INFO, varied length lines that are TAB delimited ]

    ACCOUNTNUM = SEGMENT(FILELINE,2,CHARACTERSEARCH(FILELINE,TAB)-2)                       [ Account Number ]
    IF LENGTH(ACCOUNTNUM) = 3 THEN
     ACCOUNTNUM = "0000000"+ACCOUNTNUM
    ELSE IF LENGTH(ACCOUNTNUM) = 4 THEN
     ACCOUNTNUM = "000000"+ACCOUNTNUM
    ELSE IF LENGTH(ACCOUNTNUM) = 5 THEN
     ACCOUNTNUM = "00000"+ACCOUNTNUM
    ELSE IF LENGTH(ACCOUNTNUM) = 6 THEN
     ACCOUNTNUM = "0000"+ACCOUNTNUM
    ELSE IF LENGTH(ACCOUNTNUM) = 7 THEN
     ACCOUNTNUM = "000"+ACCOUNTNUM
    ELSE IF LENGTH(ACCOUNTNUM) = 8 THEN
     ACCOUNTNUM = "00"+ACCOUNTNUM
    ELSE IF LENGTH(ACCOUNTNUM) = 9 THEN
     ACCOUNTNUM = "0"+ACCOUNTNUM

    TEMPLINE = SEGMENT(FILELINE,CHARACTERSEARCH(FILELINE,TAB)+2,LENGTH(FILELINE))   
    NME = SEGMENT(TEMPLINE,1,CHARACTERSEARCH(TEMPLINE,TAB)-2)                              [ Holding Name ]
    TEMPLINE = SEGMENT(TEMPLINE,CHARACTERSEARCH(TEMPLINE,TAB)+2,LENGTH(FILELINE)) 
    SSN =  SEGMENT(TEMPLINE,1,CHARACTERSEARCH(TEMPLINE,TAB)-2)                             [ Holding SSN (not using)]
    TEMPLINE = SEGMENT(TEMPLINE,CHARACTERSEARCH(TEMPLINE,TAB)+2,LENGTH(FILELINE))   
    EMAILADDRESS = SEGMENT(TEMPLINE,1,CHARACTERSEARCH(TEMPLINE,TAB)-2)                     [ Email Address ]
    TEMPLINE = SEGMENT(TEMPLINE,CHARACTERSEARCH(TEMPLINE,TAB)+2,LENGTH(TEMPLINE))
    BIRTHDATE = SEGMENT(TEMPLINE,1,CHARACTERSEARCH(TEMPLINE,TAB)-2)                        [ Holding birthdate (not using) ]
    TEMPLINE = SEGMENT(TEMPLINE,CHARACTERSEARCH(TEMPLINE,TAB)+2,LENGTH(TEMPLINE))
    STATUS = SEGMENT(TEMPLINE,1,CHARACTERSEARCH(TEMPLINE,TAB)-2)                           [ Registration Status ]
    TEMPLINE = SEGMENT(TEMPLINE,CHARACTERSEARCH(TEMPLINE,TAB)+2,LENGTH(TEMPLINE)) 
    REGISTEREDMODDATE = SEGMENT(TEMPLINE,1,CHARACTERSEARCH(TEMPLINE,SPACE)-1)              [ Registration/Modified date (this one is space delimited)] 


    FOR ACCOUNT ACCOUNTNUM
     DO    
      IF ACCOUNT:ESTMTENABLE <> 1 AND  [ Ignore account if e-statement flag already enabled  (has a 1) ]
         (STATUS = "Registration" OR 
          STATUS = "REGISTRATION") THEN
       DO 
        CALL ENABLEESTATEMENT
        FOR EACH TRACKING WITH TRACKING:TYPE=65 AND  [ e-statement tracking ]
                               (TRACKING:EXPIREDATE = '--/--/--' OR
                               TRACKING:EXPIREDATE > SYSTEMDATE)
         DO
          CALL ADDREGISTERDATE
          CALL EXPIRETRACKING
         END[FOR EACH TRACKING]
       END
      ELSE IF ACCOUNT:ESTMTENABLE = 1 AND  [ Ignore account if e-statement flag already enabled  (has a 1) ]
         (STATUS = "Registration" OR 
          STATUS = "REGISTRATION") THEN
       DO 
        FOR EACH TRACKING WITH TRACKING:TYPE=65 AND  [ e-statement tracking ]
                               (TRACKING:EXPIREDATE = '--/--/--' OR
                               TRACKING:EXPIREDATE > SYSTEMDATE)
         DO
          CALL ADDREGISTERDATE
          CALL EXPIRETRACKING
         END[FOR EACH TRACKING]
       END
      ELSE IF ACCOUNT:ESTMTENABLE <> 0 AND  [ Ignore account if e-statement flag already disabled  (has a 0) ]
              (STATUS = "Discontinuation" OR 
               STATUS = "DISCONTINUATION") THEN 
        DO
         CALL DISCONTINUEESTATEMENT
        END




        FOR EACH NAME WITH (NAME:TYPE=00 OR NAME:TYPE=02)
         DO
          IF (NAME:EMAIL <> EMAILADDRESS) THEN     
           DO
            CALL FMEMAIL
           END    
         ELSE IF NAME:EMAIL<>"" AND
                 NAME:EMAIL<>EMAILADDRESS AND
                 NAME:EMAIL<>UPPERCASE(EMAILADDRESS) THEN
          DO
           CALL WRITETOMISMATCHNAME
          END   
         ELSE IF NAME:EMAIL = EMAILADDRESS THEN
          DO
           CALL WRITETOMATCHNAME
          END
         END       
         FOR EACH PREFERENCE 
          DO                                       [ If PREFERENCE EMAIL IS BLANK, FM AND USE EMAIL FROM LETTERFILE ]
           IF PREFERENCE:EMAILADDRESS <> EMAILADDRESS THEN
            DO
             CALL FMPREFERENCEEMAIL
            END 
           ELSE IF PREFERENCE:EMAILADDRESS<>"" AND                                   
                  PREFERENCE:EMAILADDRESS<>EMAILADDRESS AND
                  PREFERENCE:EMAILADDRESS<>UPPERCASE(EMAILADDRESS) THEN
            DO
             CALL WRITETOMISMATCHPREF
            END[ELSE IF]
           ELSE IF PREFERENCE:EMAILADDRESS = EMAILADDRESS THEN
            DO
             CALL WRITETOMATCHPREF
            END
          END[FOR EACH PREFERENCE]     
     END[FOR ACCOUNT]  
   IF FOUNDERRORSTRING = TRUE THEN
    FILEREADLINE(FILENUMBER,FILELINE,FILEERROR)  [ GET TO THE END OF THE LINE ]
   END[WHILE]  
   PRINT FILEERROR

   IF FILEERROR <> "EOF" THEN
    DO
     NEWLINE
     PRINT "***********************************************************"    [ FILEREADLINE command reads line up to 132 chars.  If line exceeds 132...SOL ]
     NEWLINE
     PRINT "***********************************************************"
     NEWLINE
     NEWLINE
     PRINT "LETTERFILE READING STOPPED, ERROR "
     NEWLINE
     NEWLINE
     PRINT "***********************************************************"
     NEWLINE
     PRINT "***********************************************************"
     NEWLINE
    END



  FILECLOSE(FILENUMBER,FILEERROR)
  FILECLOSE(MISMATCHFILENUM,MISMATCHFERROR) 
  FILECLOSE(MATCHFILENUM,MATCHFILEFERROR)
  
END


TOTAL
  NEWLINE
  NEWLINE
  PRINT "Email FM Count: "
  PRINT COUNT

  NEWLINE
  PRINT "Total Mismatch Count: "
  PRINT MISMATCHCOUNT
  NEWLINE
  PRINT "Total Match Count: "
  PRINT MATCHCOUNT
END


PROCEDURE ENABLEESTATEMENT
 PRINT "ACCOUNT "+ACCOUNT:NUMBER+" MODIFY ACCOUNT "
 NEWLINE
 PRINT " CHANGE ESTMTENABLE FROM "                                 [ *** IF REGISTERED, TURNING E-STATEMENT FLAG ON *** ]
 PRINT ACCOUNT:ESTMTENABLE 
 PRINT " TO 1 "
 NEWLINE
END


PROCEDURE ADDREGISTERDATE
 PRINT "ACCOUNT "+ACCOUNTNUM+" MODIFY TRACKING LOC "
 PRINT TRACKING:LOCATOR
 NEWLINE
 PRINT " CHANGE USERDATE2 FROM "                                   [ *** ADDING REGISTRATION DATE TO E-STATEMENT TRACKING *** ]                      
 PRINT TRACKING:USERDATE2  [ User registration date ]                               
 PRINT " TO "
 PRINT REGISTEREDMODDATE
 NEWLINE
END


PROCEDURE EXPIRETRACKING
 PRINT " CHANGE EXPIREDATE FROM "
 PRINT TRACKING:EXPIREDATE
 PRINT " TO "
 PRINT SYSTEMDATE
 NEWLINE
END


PROCEDURE DISCONTINUEESTATEMENT
 PRINT "ACCOUNT "+ACCOUNT:NUMBER+" MODIFY ACCOUNT "
 NEWLINE
 PRINT " CHANGE ESTMTENABLE FROM "                                   [ *** IF STATUS IS NOT REGISTRATION, TURN E-STATEMENT FLAG OFF *** ]
 PRINT ACCOUNT:ESTMTENABLE
 PRINT " TO 0 "
 NEWLINE
END


PROCEDURE FMEMAIL
  PRINT "ACCOUNT "+ACCOUNTNUM+" MODIFY NAME LOC " 
  PRINT NAME:LOCATOR
  NEWLINE
  PRINT " CHANGE EMAIL FROM "                                        [ If NAME EMAIL field is blank, FM and use Letterfile email ]
  COL=49 NAME:EMAIL
  COL=90 " TO "
  COL=93 EMAILADDRESS
  NEWLINE
  COUNT=COUNT+1
END


PROCEDURE FMPREFERENCEEMAIL
  PRINT "ACCOUNT "+ACCOUNTNUM
  PRINT " MODIFY PREFERENCE LOC " 
  PRINT PREFERENCE:LOCATOR                          [ If PREFERENCE EMAIL is blank, FM and use letterfile email ]
  NEWLINE												
  PRINT " CHANGE EMAILADDRESS FROM "
  COL=049 PREFERENCE:EMAILADDRESS
  COL=090 " TO "
  COL=093 EMAILADDRESS
  NEWLINE     
  COUNT=COUNT+1
END


PROCEDURE WRITETOMISMATCHNAME
  FILEWRITE(MISMATCHFILENUM,ACCOUNTNUM,10,MISMATCHFERROR)      
  FILEWRITE(MISMATCHFILENUM,TAB,01,MISMATCHFERROR)
  FILEWRITE(MISMATCHFILENUM,NAME:EMAIL,40,MISMATCHFERROR)
  FILEWRITE(MISMATCHFILENUM,TAB,01,MISMATCHFERROR)                       
  FILEWRITE(MISMATCHFILENUM,EMAILADDRESS,40,MISMATCHFERROR)
  FILEWRITE(MISMATCHFILENUM,TAB,01,MISMATCHFERROR)                                [ If NAME EMAIL exists but does not match Letterfile email, write to Mismatch letterfile ]
  FILEWRITE(MISMATCHFILENUM,"NAME LEVEL MISMATCH",19,MISMATCHFERROR)
  FILEWRITE(MISMATCHFILENUM,NEXTLINE,02,MISMATCHFERROR)
  NEWLINE
  MISMATCHCOUNT=MISMATCHCOUNT+1
END


PROCEDURE WRITETOMISMATCHPREF
  FILEWRITE(MISMATCHFILENUM,ACCOUNTNUM,10,MISMATCHFERROR)
  FILEWRITE(MISMATCHFILENUM,TAB,01,MISMATCHFERROR)             
  FILEWRITE(MISMATCHFILENUM,PREFERENCE:EMAILADDRESS,40,MISMATCHFERROR)            [ If PREFERENCE EMAIL exists but does not match Letterfile email, write to Mismatch letterfile ]
  FILEWRITE(MISMATCHFILENUM,TAB,01,MISMATCHFERROR)             
  FILEWRITE(MISMATCHFILENUM,EMAILADDRESS,40,MISMATCHFERROR)  
  FILEWRITE(MISMATCHFILENUM,TAB,01,MISMATCHFERROR)
  FILEWRITE(MISMATCHFILENUM,"PREFERENCE LEVEL MISMATCH",25,MISMATCHFERROR)           
  FILEWRITE(MISMATCHFILENUM,NEXTLINE,02,MISMATCHFERROR)
  NEWLINE
  MISMATCHCOUNT=MISMATCHCOUNT+1
END


PROCEDURE WRITETOMATCHNAME

  FILEWRITE(MATCHFILENUM,ACCOUNTNUM,10,MATCHFILEFERROR)
  FILEWRITE(MATCHFILENUM,TAB,01,MATCHFILEFERROR)
  FILEWRITE(MATCHFILENUM,NAME:EMAIL,40,MATCHFILEFERROR)
  FILEWRITE(MATCHFILENUM,TAB,01,MATCHFILEFERROR)				                  [ If NAME EMAIL matches letterfile email, write to match file ]
  FILEWRITE(MATCHFILENUM,EMAILADDRESS,40,MATCHFILEFERROR)
  FILEWRITE(MATCHFILENUM,TAB,01,MATCHFILEFERROR)
  FILEWRITE(MATCHFILENUM,"NAME LEVEL MATCH",16,MATCHFILEFERROR)
  FILEWRITE(MATCHFILENUM,NEXTLINE,02,MATCHFILEFERROR)
  NEWLINE
  MATCHCOUNT=MATCHCOUNT+1
END


PROCEDURE WRITETOMATCHPREF
  FILEWRITE(MATCHFILENUM,ACCOUNTNUM,10,MATCHFILEFERROR)
  FILEWRITE(MATCHFILENUM,TAB,01,MATCHFILEFERROR)
  FILEWRITE(MATCHFILENUM,PREFERENCE:EMAILADDRESS,40,MATCHFILEFERROR)              [ If PREFERENCE EMAIL matches letterfile email, write to matched letterfile ]
  FILEWRITE(MATCHFILENUM,TAB,01,MATCHFILEFERROR)
  FILEWRITE(MATCHFILENUM,EMAILADDRESS,40,MATCHFILEFERROR)
  FILEWRITE(MATCHFILENUM,TAB,01,MATCHFILEFERROR)
  FILEWRITE(MATCHFILENUM,"PREFERENCE LEVEL MATCH",22,MATCHFILEFERROR)
  FILEWRITE(MATCHFILENUM,NEXTLINE,02,MATCHFILEFERROR)
  NEWLINE
  MATCHCOUNT=MATCHCOUNT+1
END


PROCEDURE SCANSTRING

    FILEGETPOS(FILENUMBER,FPOS,FILEERROR)        [ Get file position ]
    FILEREADLINE(FILENUMBER,FILELINE,FILEERROR)  [ filereadline only works with 132 char lines ]
    IF FILEERROR <> "" THEN                      [ if error, it's because line is over 132 ]  
     DO 
      FOUNDERRORSTRING = TRUE         
      FILESETPOS(FILENUMBER,FPOS,FILEERROR) [ go back to beginning bit position and re-read differently to avoid fileread error ]
      FILEREAD(FILENUMBER,130,FILELINE,FILEERROR) [ read 130 chars ]
     END

END


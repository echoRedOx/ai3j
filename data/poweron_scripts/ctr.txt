[
 SymForm PDF Driver        - CTR.CONDUCTOR.FORM
 Auto generated variables  - CTR.CONDUCTOR.FORM.DEF
 Auto generated procedures - CTR.CONDUCTOR.FORM.PRO
 PDF Form filename         - CTR.CONDUCTOR.FORM.pdf


 Created by
 Ethan Roberts
 on 03/16/2019

 This specfile was created to make the CTR process more efficient for the end-user.

]
SUBROUTINE DEMAND WINDOWS

TARGET = ACCOUNT

DEFINE
 #INCLUDE "RD.WINDOWS.DEF"
 #INCLUDE "RD.GETDATA.DEF"
 #INCLUDE "SYMPDF.DEF"
 #INCLUDE "CTR.CONDUCTOR.FORM.DEF"
 #INCLUDE "RD.SHARE.DEF"
 #INCLUDE "RD.LOAN.DEF"
 #INCLUDE "FSCUPROCS.DEF"

 ACCTAMOUNT = MONEY
 FOUNDDBA = NUMBER
 FIRSTNAME = CHARACTER
 MIDDLENAME = CHARACTER
 LASTNAME = CHARACTER
 TEMPLINE = CHARACTER
END


SETUP
 ACCTAMOUNT = $0.00
 I = 0
 ARYSIZE = 19
 FOUNDDBA = FALSE
 PRINTERNAME   = ""           [ PRINTER NAME (OPTIONAL)  ]
 PRINTCOPIES   = 1            [ 0 = ONE COPY (DEFAULT)   ]
 PRINTMODE     = 0            [ 0 = FULL (DEFAULT)       ]
 PRINTANDTHEN  = 0            [ 0 = DO NOTHING (DEFAULT) ]
 PRINTDUPLEX   = 0            [ 0 = DEFAULT (DEFAULT)    ]
 PRINTCONTENTS = 0            [ 0 = DOC (DEFAULT)        ]


 FORMNAME = "CTR.CONDUCTOR.FORM"
 CALL FORMSETUP
 LOADSAVEDFORMS = TRUE
 SAVEDESCRIPTION = FORMNAME

 FOR ACCOUNT ACCOUNT:NUMBER
  DO
   CALL DATASETUP
   CALL CUSTOMSETUP
  END

 CLOSEFORM = FALSE
 WHILELIMIT = 100000
 WHILE (CLOSEFORM = FALSE)
  DO
   CALL SHOWFORM
   CALL CLEARCHECKBOXES
   CALL GETRESPONSE

   IF (FORMMESSAGE = "SUBMIT") THEN
    DO
     CLOSEFORM = CLOSEAFTERSUBMIT
     IF (DOFORMFMP = TRUE) THEN
      DO
       CALL FORMFMP
       IF (FORMFMPERROR <> "") THEN
        DO
         POPUPMESSAGE(2, "CTR.CONDUCTOR.FORM FM ERROR: " + FORMFMPERROR)
         CLOSEFORM = FALSE
        END
      END
     CALL FINALIZEFORM
     IF (DOOPTICAL = TRUE AND OPTICALTYPE <> "") THEN
      DO
       CALL STOREOPTICAL
       IF (OPTICALERROR <> "") THEN
        DO
         POPUPMESSAGE(2,"CTR.CONDUCTOR.FORM OPTICAL ERROR: " + OPTICALERROR)
         CLOSEFORM = FALSE
        END
      END
    END
   FORMVERSION = FORMVERSION + 1
  END
END

PRINT TITLE = "PDF FORM " + FORMNAME
 SUPPRESSNEWLINE
END




PROCEDURE CUSTOMSETUP

 FOUNDDBA = FALSE
 IF (ACCOUNT:TYPE = 3 OR         [ Indirect        ]
     ACCOUNT:TYPE = 18 OR        [ BOPH Business   ]
     ACCOUNT:TYPE = 63) THEN     [ BUSINESS        ]
  DO
   BN = NAME:LAST
   EIN = FORMAT("99-9999999",VALUE(NAME:SSN))
  END
 ELSE IF (ACCOUNT:TYPE = 64 OR ACCOUNT:TYPE = 22) THEN    [ DBA OR BOPH DBA ]
  DO 
   FOR EACH NAME WITH NAME:TYPE = 24   [ DBA NAME ]
    DO
     BN = NAME:LONGNAME
     EIN = FORMAT("99-99-99999",VALUE(NAME:SSN))
    END
  END


 CALL CUSTOMJAVASCRIPT
 CALL EMAILSETUP
END



PROCEDURE CUSTOMWRITEFORMDATA
END


PROCEDURE CUSTOMREADFORMDATA
END



PROCEDURE CUSTOMJAVASCRIPT

[                                                                     
 The code below is used for aggregating deposits and withdrawals within  
 a day.  This portion is not being used, and the teller is calculating   
 these totals on their own.                                              
]
[
  FOR EACH SHARE WITH SHARE:CLOSEDATE='--/--/--'
   DO
    FOR EACH SHARE TRANSACTION WITH SHARE TRANSACTION:POSTDATE = SYSTEMDATE AND
                                    (SHARE TRANSACTION:ACTIONCODE = "D" OR
                                     SHARE TRANSACTION:ACTIONCODE = "W")
     DO
      ACCTAMOUNT = ACCTAMOUNT + SHARE TRANSACTION:TRANAMOUNT
     END
     UNTIL SHARE TRANSACTION:POSTDATE < SYSTEMDATE
    END


    TRANAMOUNT = ACCTAMOUNT 
]


    CALL CLEARNAMEARY
    FOR EACH NAME WITH NAME:EXPIRATIONDATE = '--/--/--' AND NAME:TYPE <> 24  [ exclude dba names ]
     DO
      CALL SCANNAMEARRAY
      IF FOUNDINARY = FALSE THEN
       CALL INSERTNAME
     END

    FOR EACH SHARE WITH SHARE:CLOSEDATE = '--/--/--'
     DO
      FOR EACH SHARE NAME WITH SHARE NAME:EXPIRATIONDATE = '--/--/--'
       DO
        CALL SCANSHARENAMEARRAY
        IF FOUNDINARY = FALSE THEN
         CALL INSERTSHARENAME
       END
     END
  
     I = 0

    JSTEXT = "this.getField('ANUMBER').readonly = true; "         CALL WRITEJS
    JSTEXT = "this.getField('TRANAMOUNT').required = true; "      CALL WRITEJS
    JSTEXT = "this.getField('SYSTEMDATE').readonly = true; "      CALL WRITEJS
    JSTEXT = "this.getField('SYSUSERNAME').readonly = true; "     CALL WRITEJS
    JSTEXT = "this.getField('SYSUSERNUMBER').readonly = true; "   CALL WRITEJS


[ Making fields required based on if account is Business account or regular account ]

  IF (ACCOUNT:TYPE = 3 OR        [ Indirect        ]
     ACCOUNT:TYPE = 18 OR        [ BOPH Business   ]
     ACCOUNT:TYPE = 22 OR        [ BOPH DBA        ]
     ACCOUNT:TYPE = 63 OR        [ DBA             ]
     ACCOUNT:TYPE = 64) THEN     [ BUSINESS        ]
   DO
    JSTEXT = "this.getField('BN').required = true; "        CALL WRITEJS
    JSTEXT = "this.getField('EIN').required = true; "       CALL WRITEJS
    JSTEXT = "this.getField('ToB').required = true; "       CALL WRITEJS
    JSTEXT = "this.getField('JOB').required = true; "       CALL WRITEJS
    JSTEXT = "this.getField('FN').required = true; "        CALL WRITEJS
    JSTEXT = "this.getField('MI').required = false; "       CALL WRITEJS
    JSTEXT = "this.getField('LN').required = true; "        CALL WRITEJS
    JSTEXT = "this.getField('SSN').required = true; "       CALL WRITEJS
    JSTEXT = "this.getField('DOB').required = true; "       CALL WRITEJS
    JSTEXT = "this.getField('FID').required = true; "       CALL WRITEJS
    JSTEXT = "this.getField('ISSUED').required = true; "    CALL WRITEJS
    JSTEXT = "this.getField('PA').required = true; "        CALL WRITEJS
    JSTEXT = "this.getField('CITY').required = true; "      CALL WRITEJS
    JSTEXT = "this.getField('ST').required = true; "        CALL WRITEJS
    JSTEXT = "this.getField('ZIPCODE').required = true; "   CALL WRITEJS
   END
  ELSE
   DO
    JSTEXT = "this.getField('FN').required = true; "        CALL WRITEJS
    JSTEXT = "this.getField('MI').required = false; "       CALL WRITEJS
    JSTEXT = "this.getField('LN').required = true; "        CALL WRITEJS
    JSTEXT = "this.getField('JOB').required = true; "       CALL WRITEJS
    JSTEXT = "this.getField('SSN').required = true; "       CALL WRITEJS
    JSTEXT = "this.getField('DOB').required = true; "       CALL WRITEJS
    JSTEXT = "this.getField('FID').required = true; "       CALL WRITEJS
    JSTEXT = "this.getField('ISSUED').required = true; "    CALL WRITEJS
    JSTEXT = "this.getField('PA').required = true; "        CALL WRITEJS
    JSTEXT = "this.getField('CITY').required = true; "      CALL WRITEJS
    JSTEXT = "this.getField('ST').required = true; "        CALL WRITEJS
    JSTEXT = "this.getField('ZIPCODE').required = true; "   CALL WRITEJS
    JSTEXT = "this.getField('BN').readonly = true; "        CALL WRITEJS
    JSTEXT = "this.getField('EIN').readonly = true; "       CALL WRITEJS
    JSTEXT = "this.getField('ToB').readonly = true; "       CALL WRITEJS
   END



  [ create and begin object array ]

    JSTEXT = "aryName = [{ toString: function() {return 'Select One'},  "   CALL WRITEJS
    JSTEXT = "      MI: '',  "                                              CALL WRITEJS
    JSTEXT = "      LN: '',  "                                              CALL WRITEJS
    JSTEXT = "      JOB: '',  "                                             CALL WRITEJS
    JSTEXT = "      SSN: '',  "                                             CALL WRITEJS
    JSTEXT = "      DOB: '',  "                                             CALL WRITEJS
    JSTEXT = "      FID: '',  "                                             CALL WRITEJS
    JSTEXT = "      ISSUED: '',  "                                          CALL WRITEJS
    JSTEXT = "      PA: '',  "                                              CALL WRITEJS
    JSTEXT = "      CITY: '',  "                                            CALL WRITEJS
    JSTEXT = "      ST: '',  "                                              CALL WRITEJS
    JSTEXT = "      ZIPCODE: '', }, "                                       CALL WRITEJS

[
****************************************************************************************
***    Ethan Roberts                                                                 ***
***    09/13/2019                                                                    ***
***                                                                                  ***
***                                                                                  ***
***    The below IF clause is excluding various ACCOUNT:TYPEs because                ***
***    the Primary name (Name Prime) does not have a NAME:FIRST, NAME:MIDDLE,        ***
***    or NAME:LAST field for these account types, therefore you will not need to    ***
***    get the primary name, only those linked to each share.                        ***
***                                                                                  ***                                                       
***                                                                                  ***
****************************************************************************************
]

    I = 0
    IF ACCOUNT:TYPE <> 3 AND      [ indirect dealer   ] 
       ACCOUNT:TYPE <> 8 AND      [ non-profit        ]
       ACCOUNT:TYPE <> 9 AND      [ trust             ]
       ACCOUNT:TYPE <> 10 AND     [ estate            ]
       ACCOUNT:TYPE <> 18 AND     [ BOPH Business     ]
       ACCOUNT:TYPE <> 19 AND     [ BOPH non-profit   ]
       ACCOUNT:TYPE <> 20 AND     [ BOPH Trust        ]
       ACCOUNT:TYPE <> 22 AND     [ BOPH DBA          ]
       ACCOUNT:TYPE <> 23 AND     [ BOPH estate       ]
       ACCOUNT:TYPE <> 63 THEN    [ Business          ]     
      [ ACCOUNT:TYPE <> 64 THEN     DBA               ] 
     DO
      FOR EACH NAME WITH NAME:EXPIRATIONDATE = '--/--/--'
       DO
        FOR I = 0 TO ARYSIZE
         DO
          TEMPLINE = SEGMENT(NAMEARY(I),CHARACTERSEARCH(NAMEARY(I)," ")+1,LENGTH(NAMEARY(I))) 
          FIRSTNAME =  SEGMENT(NAMEARY(I),1,CHARACTERSEARCH(NAMEARY(I)," ")-1)
          MIDDLENAME = SEGMENT(TEMPLINE,1,CHARACTERSEARCH(TEMPLINE," ")-1)
          TEMPLINE = SEGMENT(TEMPLINE,CHARACTERSEARCH(TEMPLINE," ")+1,LENGTH(TEMPLINE)) 
          LASTNAME = SEGMENT(TEMPLINE,1,LENGTH(TEMPLINE))

          IF NAME:LONGNAME = NAMEARY(I) AND NAME:TYPE <> 24 THEN    [ excluding DBA names even though none should exist in this array ]
           DO
            JSTEXT =  "{ toString: function() {return '"+FIRSTNAME+"'}, "           CALL WRITEJS
            JSTEXT = "      MI: '"+MIDDLENAME+"',  "                                CALL WRITEJS
            JSTEXT = "      LN: '"+LASTNAME+"',  "                                  CALL WRITEJS
            JSTEXT = "      JOB: '"+NAME:OCCUPATION+"',  "                          CALL WRITEJS
            JSTEXT = "      SSN: '"+NAME:SSN+"',  "                                 CALL WRITEJS
            JSTEXT = "      DOB: '"+FORMAT("99/99/9999",NAME:BIRTHDATE)+"',  "      CALL WRITEJS
            JSTEXT = "      FID: 'DL  "+NAME:IDENTIDNUMBER:1+"',  "                 CALL WRITEJS
            JSTEXT = "      ISSUED: '"+NAME:IDENTIDDESCRIPTION:1+"',  "             CALL WRITEJS
            JSTEXT = "      PA: '"+NAME:STREET+"',  "                               CALL WRITEJS
            JSTEXT = "      CITY: '"+NAME:CITY+"',  "                               CALL WRITEJS
            JSTEXT = "      ST: '"+NAME:STATE+"',  "                                CALL WRITEJS
            JSTEXT = "      ZIPCODE: '"+SEGMENT(NAME:ZIPCODE,1,5)+"', }, "          CALL WRITEJS

            NAMEARY(I) = "" [ this element has been used, set to null ]
           END
         END
       END
     END
      
     FOR EACH SHARE WITH SHARE:CLOSEDATE = '--/--/--'
      DO
       FOR EACH SHARE NAME WITH SHARE NAME:EXPIRATIONDATE = '--/--/--'
        DO
         FOR I = 0 TO ARYSIZE
          DO
           TEMPLINE = SEGMENT(NAMEARY(I),CHARACTERSEARCH(NAMEARY(I)," ")+1,LENGTH(NAMEARY(I))) 
           FIRSTNAME =  SEGMENT(NAMEARY(I),1,CHARACTERSEARCH(NAMEARY(I)," ")-1)
           MIDDLENAME = SEGMENT(TEMPLINE,1,CHARACTERSEARCH(TEMPLINE," ")-1)
           TEMPLINE = SEGMENT(TEMPLINE,CHARACTERSEARCH(TEMPLINE," ")+1,LENGTH(TEMPLINE)) 
           LASTNAME = SEGMENT(TEMPLINE,1,LENGTH(TEMPLINE))
           IF SHARE NAME:LONGNAME = NAMEARY(I) THEN
            DO
             JSTEXT =  "{ toString: function() {return '"+FIRSTNAME+"'}, "                  CALL WRITEJS
             JSTEXT = "      MI: '"+MIDDLENAME+"',  "                                       CALL WRITEJS
             JSTEXT = "      LN: '"+LASTNAME+"',  "                                         CALL WRITEJS
             JSTEXT = "      JOB: '"+SHARE NAME:OCCUPATION+"',  "                           CALL WRITEJS  
             JSTEXT = "      SSN: '"+SHARE NAME:SSN+"',  "                                  CALL WRITEJS 
             JSTEXT = "      DOB: '"+FORMAT("99/99/9999",SHARE NAME:BIRTHDATE)+"',  "       CALL WRITEJS
             JSTEXT = "      FID: 'DL  "+SHARE NAME:IDENTIDNUMBER:1+"',  "                  CALL WRITEJS
             JSTEXT = "      ISSUED: '"+SHARE NAME:IDENTIDDESCRIPTION:1+"',  "              CALL WRITEJS
             JSTEXT = "      PA: '"+SHARE NAME:STREET+"',  "                                CALL WRITEJS
             JSTEXT = "      CITY: '"+SHARE NAME:CITY+"',  "                                CALL WRITEJS
             JSTEXT = "      ST: '"+SHARE NAME:STATE+"',  "                                 CALL WRITEJS
             JSTEXT = "      ZIPCODE: '"+SEGMENT(SHARE NAME:ZIPCODE,1,5)+"',  },"           CALL WRITEJS

             NAMEARY(I) = ""  [ this element has been used, set to null ]
            END     
          END
        END
      END


      JSTEXT =  "{ toString: function() {return 'Non-member'}, "   CALL WRITEJS
      JSTEXT = "      MI: '',  "                                   CALL WRITEJS 
      JSTEXT = "      LN: '',  "                                   CALL WRITEJS 
      JSTEXT = "      JOB: '',  "                                  CALL WRITEJS
      JSTEXT = "      SSN: '',  "                                  CALL WRITEJS
      JSTEXT = "      DOB: '',  "                                  CALL WRITEJS
      JSTEXT = "      FID: '',  "                                  CALL WRITEJS
      JSTEXT = "      ISSUED: '',  "                               CALL WRITEJS
      JSTEXT = "      PA: '',  "                                   CALL WRITEJS
      JSTEXT = "      CITY: '',  "                                 CALL WRITEJS 
      JSTEXT = "      ST: '',  "                                   CALL WRITEJS
      JSTEXT = "      ZIPCODE: '',  "                              CALL WRITEJS
      JSTEXT = "}]; "                                              CALL WRITEJS

      [ end of object array ]


      JSTEXT = "var varName = this.getField('FN');"                CALL WRITEJS
      JSTEXT = " varName.clearItems(); "                           CALL WRITEJS
      JSTEXT = " varName.setItems(aryName); "                      CALL WRITEJS
END


PROCEDURE EMAILSETUP
 EMAILENABLED = 0
 EMAILFORMAT = 0
 EMAILFROM = ""
 EMAILSUBJECT = ""
END



PROCEDURE CLEARNAMEARY
 I = 0
 FOR I = 0 TO ARYSIZE
  DO
   NAMEARY(I) = ""
  END
  I = 0
END



PROCEDURE SCANNAMEARRAY
 FOUNDINARY = FALSE
 I = 0 
 FOR I = 0 TO ARYSIZE
  DO
   IF NAMEARY(I) = NAME:LONGNAME THEN
     FOUNDINARY = TRUE
  END
  I = 0

END




PROCEDURE SCANSHARENAMEARRAY
 FOUNDINARY = FALSE
 I = 0 
 FOR I = 0 TO ARYSIZE
  DO
   IF NAMEARY(I) = SHARE NAME:LONGNAME THEN
     FOUNDINARY = TRUE
  END
  I = 0

END




PROCEDURE INSERTNAME
 INSERTED = FALSE
 I = 0
 WHILE (I <= ARYSIZE AND INSERTED = FALSE)
  DO
   IF NAMEARY(I) = "" THEN  [ found the next empty slot in array, insert ID ]
    DO
     NAMEARY(I) = NAME:LONGNAME
     INSERTED = TRUE
    END
  I = I + 1
  END

  I = 0
END






PROCEDURE INSERTSHARENAME
 INSERTED = FALSE
 I = 0
 WHILE (I <= ARYSIZE AND INSERTED = FALSE)
  DO
   IF NAMEARY(I) = "" THEN  [ found the next empty slot in array, insert ID ]
    DO
     NAMEARY(I) = SHARE NAME:LONGNAME
     INSERTED = TRUE
    END
  I = I + 1
  END

  I = 0
END



#INCLUDE "SYMPDF.PRO"
#INCLUDE "CTR.CONDUCTOR.FORM.PRO"

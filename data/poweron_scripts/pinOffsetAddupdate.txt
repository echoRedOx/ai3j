[  ER.PIN.OFFSET.ADDUPDATE

   Created by
   Ethan Roberts
   on 09/28/2018
   
   This specfile will find all cards with a Pin Offset change equal to the SYSTEMDATE.

]


TARGET = ACCOUNT

DEFINE
 COUNT = NUMBER
 NEWPINOFFSET = NUMBER
 CARDNUM = CHARACTER
 ARY = CHARACTER ARRAY (999)
 ARYSIZE = NUMBER
 SAVE = CHARACTER


 IMPORTFNAME=CHARACTER
 IMPORTFLINE=CHARACTER
 IMPORTFNUMBER=NUMBER
 IMPORTFERROR=CHARACTER
 IMPORTCOUNT = NUMBER
 I = NUMBER
 J = NUMBER


 EXPORTFNAME=CHARACTER
 EXPORTFNUMBER=NUMBER
 EXPORTFERROR=CHARACTER
 EXPORTCOUNT = NUMBER

 TEMPCHAR=CHARACTER
 FILLER=""
 CR=CHARACTER(1)
 LF=CHARACTER(1)
 EOL=CHARACTER(2)
END

SETUP
 COUNT = 0
 CR=CTRLCHR(13)
 LF=CTRLCHR(10)
 EOL=CR+LF
 I = 0
 J = 0
 ARYSIZE = 0

 IMPORTFNAME="FIRSTDATA.CARDNUMS"
 EXPORTFNAME=CHARACTERREAD("Export Letter File Name")


 CALL OPENIMPORTFILE

 CALL CLEARARY
 I = 0
 WHILE IMPORTFERROR = "" 
   DO
    FILEREADLINE(IMPORTFNUMBER,IMPORTFLINE,IMPORTFERROR)
    ARY(I) = IMPORTFLINE
    I = I + 1
   END[WHILE]
 
  ARYSIZE = I-1
  I = 0


 IF EXPORTFNAME="" THEN
  DO
   PRINT "ERROR: Export Letter File name cannot be blank"
   NEWLINE
   TERMINATE
  END


 CALL DELETEEXPORTFILE
 CALL CREATEEXPORTFILE
 CALL OPENEXPORTFILE


 FILEWRITE(EXPORTFNUMBER,"H",1,EXPORTFERROR)                 [Record ID]
 FILEWRITE(EXPORTFNUMBER,"448849",6,EXPORTFERROR)            [Participant ID]
 FILEWRITE(EXPORTFNUMBER,"7K",2,EXPORTFERROR)                [Processor Value]
 FILEWRITE(EXPORTFNUMBER,"OFF",3,EXPORTFERROR)               [File Type]
 FILEWRITE(EXPORTFNUMBER,"P",1,EXPORTFERROR)                 [Sub Type]
 TEMPCHAR=SEGMENT(FORMAT("9999",FULLYEAR(SYSACTUALDATE)),3,4)+
          FORMAT("99",MONTH(SYSACTUALDATE))+
          FORMAT("99",DAY(SYSACTUALDATE))
 FILEWRITE(EXPORTFNUMBER,TEMPCHAR,6,EXPORTFERROR)            [Creation Date]
 TEMPCHAR=FORMAT("9999",SYSACTUALTIME)+"00"
 FILEWRITE(EXPORTFNUMBER,TEMPCHAR,6,EXPORTFERROR)            [Creation Time]
 FILEWRITE(EXPORTFNUMBER,FILLER,55,EXPORTFERROR)             [Filler - to pad line to 80 characters, not including EOL]
 FILEWRITE(EXPORTFNUMBER,EOL,EXPORTFERROR)

END

SELECT
 NONE
END


PRINT TITLE = "FSCU PIN OFFSET FM"
HEADER = ""
  
  I = 0
  CALL SORTARY
 
  I = 0
  FOR I = 0 TO ARYSIZE-1  [ Doing "ARYSIZE-1" so that the EOF line isn't printed ]
   DO
    CALL WRITETODATAFILE
   END

END



TOTAL
 [Batch Trailer]
 FILEWRITE(EXPORTFNUMBER,"T",1,EXPORTFERROR)                 [Record ID]
 TEMPCHAR=FORMAT(REPEATCHR("9",8),EXPORTCOUNT)
 FILEWRITE(EXPORTFNUMBER,TEMPCHAR,8,EXPORTFERROR)            [Record Count]
 FILEWRITE(EXPORTFNUMBER,FILLER,71,EXPORTFERROR)             [Filler - to pad line to 80 characters, not including EOL]
 FILEWRITE(EXPORTFNUMBER,EOL,EXPORTFERROR)

 FILECLOSE(IMPORTFNUMBER,IMPORTFERROR) 
 FILECLOSE(EXPORTFNUMBER,EXPORTFERROR)
END



PROCEDURE WRITETODATAFILE

   TEMPCHAR="A"
   FILEWRITE(EXPORTFNUMBER,TEMPCHAR,1,EXPORTFERROR)                           [Action]
   FILEWRITE(EXPORTFNUMBER,ARY(I),27,EXPORTFERROR)                            [Customer ID Number]
   FILEWRITE(EXPORTFNUMBER,FILLER,52,EXPORTFERROR)                            [Filler]  
   FILEWRITE(EXPORTFNUMBER,EOL,EXPORTFERROR)
   EXPORTCOUNT = EXPORTCOUNT+1
 
END





PROCEDURE CLEARARY

 I = 0

 FOR I = 0 TO 999
  DO
   ARY(I) = ""
  END

  I = 0

END




PROCEDURE PRINTARY

 I = 0

 FOR I = 0 TO ARYSIZE
  DO
   PRINT ARY(I)
   NEWLINE
  END

  I = 0

END





PROCEDURE SORTARY

  FOR I = 0 TO ARYSIZE
   DO
    FOR J = 0 TO ARYSIZE-2  [ "ARYSIZE-2" because we are accounting for the EOL element ]
     DO
      IF ARY(J) > ARY(J+1) THEN
       DO
        SAVE = ARY(J+1)
        ARY(J+1) = ARY(J)
        ARY(J) = SAVE
       END
     END
   END

END



PROCEDURE OPENIMPORTFILE
 FILEOPEN("LETTER",IMPORTFNAME,"READ",IMPORTFNUMBER,IMPORTFERROR)
 IF IMPORTFERROR<>"" THEN
  DO
   PRINT "Error opening Import Letter File "+IMPORTFNAME+": " + IMPORTFERROR
   NEWLINE
   TERMINATE
  END
END



PROCEDURE DELETEEXPORTFILE
 FILEDELETE("LETTER",EXPORTFNAME,EXPORTFERROR)
END


PROCEDURE CREATEEXPORTFILE

 FILECREATE("LETTER",EXPORTFNAME,EXPORTFERROR)
 IF EXPORTFERROR<>"" THEN
  DO
   PRINT "Error creating Export Letter File "+EXPORTFNAME+": " + EXPORTFERROR
   NEWLINE
   TERMINATE
  END

END



PROCEDURE OPENEXPORTFILE
 FILEOPEN("LETTER",EXPORTFNAME,"APPEND",EXPORTFNUMBER,EXPORTFERROR)
 IF EXPORTFERROR<>"" THEN
  DO
   PRINT "Error opening Export Letter File "+EXPORTFNAME+": " + EXPORTFERROR
   NEWLINE
   TERMINATE
  END
END
